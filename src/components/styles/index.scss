@use 'var';
@use 'mixins';
@use 'animations';
@use 'sass:map';

.rc-menu-container {
    position: absolute;
    width: 0px;
    height: 0px;
}

.rc-menu {
    @include mixins.reset-list;
    @include mixins.remove-focus;
    font-size: var.$font-size;
    color: var.$color;
    background-color: var.$background-color;
    border-radius: 0.25rem;
    box-shadow: 0 3px 7px rgba(0, 0, 0, 0.133), 0 0.6px 2px rgba(0, 0, 0, 0.1);
    position: absolute;
    z-index: 100;
    min-width: 10rem;
    padding: 0.5rem 0;
    width: max-content;
    cursor: default;
    user-select: none;
    display: none;

    &--open,
    &--closing {
        display: block;
    }

    @each $dir in map.keys(animations.$directions) {
        @include animations.animation("slide", $dir);
    }

    &__arrow {
        box-sizing: border-box;
        width: var.$arrow-size;
        height: var.$arrow-size;
        background-color: var.$background-color;
        border: 1px solid transparent;
        border-left-color: var.$arrow-border-color;
        border-top-color: var.$arrow-border-color;
        position: absolute;

        &--dir-left {
            right: var.$arrow-pos;
            transform: translateY(-50%) rotate(135deg);
        }

        &--dir-right {
            left: var.$arrow-pos;
            transform: translateY(-50%) rotate(-45deg);
        }

        &--dir-top {
            bottom: var.$arrow-pos;
            transform: translateX(-50%) rotate(-135deg);
        }

        &--dir-bottom {
            top: var.$arrow-pos;
            transform: translateX(-50%) rotate(45deg);
        }
    }

    &__item {
        @include mixins.remove-focus;
        position: relative;
        display: flex;
        align-items: center;
        font-weight: var.$font-weight;
        padding: 0.375rem 1.5rem;
        background-color: var.$background-color;
        cursor: pointer;

        .rc-menu--animation & {
            transition: {
                property: background-color, color;
                duration: animations.$duration;
                timing-function: ease-in-out;
            }
        }

        &--hover {
            background-color: var.$background-color-hover;
        }

        &--active {
            color: var.$color-active;
            background-color: var.$background-color-active;

            // for <a> tag
            &:hover {
                color: var.$color-active;
            }
        }

        &--focusable {
            cursor: default;
            background-color: var.$background-color;
        }

        &--disabled {
            color: var.$color-disabled;
            cursor: default;
        }

        &--type-radio {
            padding-left: 2.2rem;
            &::before {
                content: "\25cb";
                position: absolute;
                left: 0.8rem;
                top: 0.55rem;
                font-size: 0.8rem;
            }
        }

        &--type-radio#{&}--checked::before {
            content: "\25cf";
        }

        &--type-checkbox {
            padding-left: 2.2rem;
            &::before {
                position: absolute;
                left: 0.8rem;
            }
        }

        &--type-checkbox#{&}--checked::before {
            content: "\2714";
        }
    }

    &__submenu {
        position: relative;

        > .rc-menu__item {
            padding-right: 2.5rem;
            &::after {
                content: "\276f";
                position: absolute;
                right: 1rem;
            }
        }
    }

    &__radio-group {
        @include mixins.reset-list;
    }

    &__header {
        color: var.$color-header;
        font-size: 0.8rem;
        padding: 0.2rem 1.5rem;
        text-transform: uppercase;
    }

    &__divider {
        height: 1px;
        margin: 0.5rem 0;
        background-color: var.$color-divider;
    }
}

.rc-menu-button {
    font-size: var.$font-size;
    font-weight: var.$font-weight;
    color: var.$color;
    line-height: 1.5;
    padding: 0.375rem 0.75rem;
    border: 1px solid var.$border-color;
    border-radius: 0.25rem;
    background-color: var.$background-color;
    transition: background-color 0.12s ease-in-out;
    cursor: pointer;
    user-select: none;
    &:hover {
        background-color: var.$background-color-hover;
    }
    &:active {
        background-color: var.$btn-background-color-active;
    }
    &:disabled {
        color: var.$color-disabled;
        background-color: var.$background-color-hover;
    }
}
